"""initial db create

Revision ID: 5a583b3c6089
Revises: 
Create Date: 2015-07-15 11:43:08.154685

"""

# revision identifiers, used by Alembic.
revision = '5a583b3c6089'
down_revision = None
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import ENUM

result_enum = ENUM('PASS', 'FAIL', 'ABORT', 'UNKNOWN', 'TIMEOUT', name='jsil.result_text', create_type=False)


def upgrade():
    result_enum.create(op.get_bind(), checkfirst=False)

    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fail_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='jsil'
    )
    op.create_table('test_cases',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('negative', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='jsil'
    )
    op.create_table('test_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='jsil'
    )
    op.create_table('test_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('impl_name', sa.String(), nullable=True),
    sa.Column('impl_version', sa.String(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('repo_version', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('condor_cluster', sa.SmallInteger(), nullable=True),
    sa.Column('condor_scheduler', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='jsil'
    )
    op.create_table('fail_group_memberships',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], [u'jsil.fail_groups.id'], name='fail_group_memberships_group_id_fkey'),
    sa.ForeignKeyConstraint(['test_id'], [u'jsil.test_cases.id'], name='fail_group_memberships_test_id_fkey'),
    sa.PrimaryKeyConstraint('group_id', 'test_id'),
    schema='jsil'
    )
    op.create_table('test_batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('system', sa.String(), nullable=True),
    sa.Column('osnodename', sa.String(), nullable=True),
    sa.Column('osrelease', sa.String(), nullable=True),
    sa.Column('osversion', sa.String(), nullable=True),
    sa.Column('hardware', sa.String(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('condor_proc', sa.SmallInteger(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], [u'jsil.test_jobs.id'], name='test_batches_job_id_fkey'),
    sa.PrimaryKeyConstraint('id'),
    schema='jsil'
    )
    op.create_table('test_group_memberships',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], [u'jsil.test_groups.id'], name='test_group_memberships_group_id_fkey'),
    sa.ForeignKeyConstraint(['test_id'], [u'jsil.test_cases.id'], name='test_group_memberships_test_id_fkey'),
    sa.PrimaryKeyConstraint('group_id', 'test_id'),
    schema='jsil'
    )

    op.create_table('test_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.String(), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('result', result_enum, nullable=True),
    sa.Column('exit_code', sa.SmallInteger(), nullable=True),
    sa.Column('stdout', sa.Text(), nullable=True),
    sa.Column('stderr', sa.Text(), nullable=True),
    sa.Column('duration', sa.Interval(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], [u'jsil.test_batches.id'], name='test_runs_batch_id_new_fkey'),
    sa.ForeignKeyConstraint(['test_id'], [u'jsil.test_cases.id'], name='test_runs_test_id_fkey'),
    sa.PrimaryKeyConstraint('id'),
    schema='jsil'
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_runs', schema='jsil')
    op.drop_table('test_group_memberships', schema='jsil')
    op.drop_table('test_batches', schema='jsil')
    op.drop_table('fail_group_memberships', schema='jsil')
    op.drop_table('test_jobs', schema='jsil')
    op.drop_table('test_groups', schema='jsil')
    op.drop_table('test_cases', schema='jsil')
    op.drop_table('fail_groups', schema='jsil')
    ### end Alembic commands ###
    result_enum.drop(op.get_bind(), checkfirst=False)
