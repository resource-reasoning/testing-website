<metal:main use-macro="load: layout/page.pt">
  <metal metal:fill-slot="header">
    <h1>/job/${request.matchdict['job_id']}</h1>
    <p>View job recap</p>
  </metal>

  <metal metal:fill-slot="content">
    <div class="row">
      <div class="col-sm-7">
        <table class="table table-bordered">
          <tbody>
            <tr tal:repeat="stat runs_stats">
              <td>${stat[0]}</td>
              <td>${stat[1]}</td>
            </tr>
          </tbody>
        </table>
      </div>
      <div class="col-sm-3">
        <canvas id="stats-pie" width="200" height="200"></canvas>
      </div>
    </div>
    <div class="row form-group">
      <div class="col-sm-3">
        <input id="job-no" type="text" class="form-control" placeholder="Compare against another job">
      </div>
      <div class="col-sm-3">
        <button id="submit-no" class="btn btn-default">Submit</button>
      </div>
      <div class="form-group">
        <form action="${request.route_url('apply_classifier', classifier_id='all')}" method="POST">
          <input name="job" type="hidden" value="${job.id}" />
          <div class="col-sm-5">
            <button class="btn btn-warning" name="submit" value="apply">Apply All Classifiers</button>
            <button class="btn btn-danger" name="submit" value="delete">Unapply All Classifiers</button>
          </div>
        </form>
      </div>
    </div>

    <div class="row form-group" id="table-controls">
      <div class="col-sm-2 checkbox">
        <div><label><input type="checkbox" id="chk-pass" value="PASS" />PASS</label></div>
        <div><label><input type="checkbox" id="chk-fail" value="FAIL" />FAIL</label></div>
        <div><label><input type="checkbox" id="chk-abort" value="ABORT" />ABORT</label></div>
        <div><label><input type="checkbox" id="chk-timeout" value="TIMEOUT" />TIMEOUT</label></div>
        <div><label><input type="checkbox" id="chk-unknown" value="UNKNOWN" />UNKNOWN</label></div>
      </div>
      <div class="col-sm-3">
        <label for="select-group">Include groups:</label>
        <select class="form-control" id="select-group" multiple="multiple">
          <option tal:repeat="group groups" value="${group.id}">${group.description}</option>
        </select>
      </div>
      <div class="col-sm-3">
        <label for="exclude-group">Exclude groups:</label>
        <select class="form-control" id="exclude-group" multiple="multiple">
          <option tal:repeat="group groups" value="${group.id}">${group.description}</option>
        </select>
      </div>
      <div class="col-sm-2">
        <label for="select-classifier">Include classifiers:</label>
        <select class="form-control" id="select-classifier" multiple="multiple">
          <option tal:repeat="classifier classifiers" value="${classifier.id}">${classifier.description}</option>
        </select>
      </div>
      <div class="col-sm-2">
        <label for="exclude-classifier">Exclude classifiers:</label>
        <select class="form-control" id="exclude-classifier" multiple="multiple">
          <option tal:repeat="classifier classifiers" value="${classifier.id}">${classifier.description}</option>
        </select>
      </div>
    </div>

    <table id="job-table" class="table table-hover table-bordered">
      <thead>
        <tr>
          <th>Test Case (Click to view run)</th>
          <th>stdout</th>
          <th>stderr</th>
          <th>Result</th>
        </tr>
      </thead>
    </table>
  </metal>

  <script metal:fill-slot="extra-script">
    var resultFilter = [];
    var selectFilters = {};

    var table;

    function isDefined(val) {
          return !(val === undefined);
      }

    function applyFilters() {
      resultFilter = ['#chk-pass', '#chk-fail', '#chk-abort', '#chk-timeout', '#chk-unknown'].map(
        function(el) {
          var el = $(el)[0];
          return el.checked ? el.value : undefined;
        }).filter(isDefined);

      ['select-group', 'exclude-group', 'select-classifier', 'exclude-classifier'].forEach(
        function(id) {
          selectFilters[id] = Array.prototype.map.call(
            $('#'+id)[0],
            function(opt) {
              return opt.selected ? opt.value : undefined;
            }
          ).filter(isDefined);
        }
      );

      table.draw();
    }

    jQuery(document).ready(function($) {

      table = $("#job-table").DataTable( {
        "processing": true,
        "serverSide": true,
        "ajax" : {
          "url" : "${request.route_path('request_job_table', job_id=request.matchdict['job_id'])}",
          "type" : "GET",
          "data" : function(d) {
            Object.assign(d, selectFilters);
            d.resultFilter = resultFilter;
          }
        },
        "columns" : [
          {
            "data" : "test_id",
            "render" : function (data, type, row) {
              return "<a href='" + row.DT_RowData.link + "'>" + data + "</a>";
            }
          },
          { "data" : "stdout" },
          { "data" : "stderr" },
          { "data" : "result" }
        ]
      });

      $("#submit-no").click(function () {
        window.document.location =  "${request.route_url('view_home')}" + 'compare/' + "${request.matchdict['job_id']}/" + $("#job-no").val();
      });

      $('#table-controls').change(applyFilters);
      applyFilters();
    });
  </script>
</metal:main>
